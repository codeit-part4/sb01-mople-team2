name: Deploy Mople to ECS (EC2)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service:
          - name: mople-app-service
            path: .
            port: 8080
            ecr_var: ECR_REPO_URI
            taskdef: ecs/ecs-app-template.json
          - name: nginx-gateway-service
            path: ./nginx
            port: 80
            ecr_var: ECR_NGINX_URI
            taskdef: ecs/ecs-nginx-template.json

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Write .env file from GitHub Secret
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Load .env file
        run: |
          set -a
          source .env
          set +a
          cat .env >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Resolve ECR URI from env var
        id: resolve-ecr
        run: |
          ECR_VAR_NAME=${{ matrix.service.ecr_var }}
          ECR_URI=$(eval echo \$$ECR_VAR_NAME)
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $ECR_URI

      - name: Build and Push Docker image
        run: |
          docker build -t ${{ matrix.service.name }} -f ${{ matrix.service.path }}/Dockerfile ${{ matrix.service.path }}
          docker tag ${{ matrix.service.name }}:latest $ECR_URI:latest
          docker push $ECR_URI:latest

      - name: Replace image in task definition template
        run: |
          mkdir -p temp
          envsubst < ${{ matrix.service.taskdef }} > temp/ecs-task-def.json

      - name: Deploy to ECS EC2
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: temp/ecs-task-def.json
          service: ${{ matrix.service.name }}
          cluster: mople-cluster
          wait-for-service-stability: true

