name: CI

on:
  pull_request:
    branches: [ "dev", "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      checks: write
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: mople_user
          POSTGRES_PASSWORD: mople_1234
          POSTGRES_DB: mople
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 3s
          --health-retries 10
        ports:
          - 5432:5432

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execution permission for gradle
        run: chmod +x gradlew

      - name: Write .env file
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "${{ secrets.ENV_FILE_DEV }}" > .env
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "${{ secrets.ENV_FILE }}" > .env
          fi
          echo ".env 파일 생성 완료"
          cat .env

      - name: Export .env to ENV
        run: |
          set -a
          source .env
          set +a

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Apply schema.sql to PostgreSQL
        run: |
          psql -h localhost -p 5432 -U mople_user -d mople -f src/main/resources/schema.sql
        env:
          PGPASSWORD: mople_1234

      - name: Build (skip tests)
        run: ./gradlew build -x test -Dspring.profiles.active=test

      - name: Run tests (ignore failures)
        run: ./gradlew test -Dspring.profiles.active=test
        continue-on-error: true

      - name: Generate coverage
        run: ./gradlew clean test jacocoTestReport

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/jacoco/test/jacocoTestReport.xml
          flags: unittests
          name: codecov-coverage

      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: build/test-results/test/TEST-*.xml

      - name: add comments to a pull request
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: build/test-results/test/TEST-*.xml
