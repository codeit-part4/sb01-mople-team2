name: CI

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      checks: write
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: mople_user
          POSTGRES_PASSWORD: mople_1234
          POSTGRES_DB: mople
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 3s
          --health-retries 10

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execution permission for gradle
        run: chmod +x gradlew

      - name: Grant execution permission for wait-for-it.sh
        run: chmod +x wait-for-it.sh

      - name: Build with Gradle
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mople
          SPRING_DATASOURCE_USERNAME: mople_user
          SPRING_DATASOURCE_PASSWORD: mople_1234
        run: |
          sleep 10
          ./wait-for-it.sh postgres:5432 -t 90 -- ./gradlew clean build -Dspring.profiles.active=test

      - name: Check application-test.yml exists
        if: always()
        run: ls -R src/test/resources

      - name: Print Spring active profile
        if: always()
        run: |
          echo "SPRING_PROFILES_ACTIVE=$SPRING_PROFILES_ACTIVE"
          ./gradlew properties | grep -i spring

      - name: Test PostgreSQL Connection Directly
        if: always()
        run: |
          # 1. psql 클라이언트 설치 (PostgreSQL 이미지는 대부분 포함)
          # apt-get update && apt-get install -y postgresql-client # 이미지는 대부분 포함되어 있어 필요 없을 수 있음

          # 2. 간단한 psql 명령으로 연결 테스트
          # wait-for-it.sh 가 타임아웃 되므로 이 명령은 wait-for-it.sh 이전에는 실행될 수 없음
          # 하지만 wait-for-it.sh 이후에 여전히 문제가 발생한다면 이 명령을 사용하여 직접 연결 테스트 가능
          echo "Attempting direct psql connection..."
          PGPASSWORD=$SPRING_DATASOURCE_PASSWORD psql -h postgres -p 5432 -U mople_user -d mople -c "\conninfo" || { echo "psql connection failed!"; exit 1; }
          echo "psql connection successful!"
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mople
          SPRING_DATASOURCE_USERNAME: mople_user
          SPRING_DATASOURCE_PASSWORD: mople_1234


      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: build/test-results/test/TEST-*.xml

      - name: add comments to a pull request
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: build/test-results/test/TEST-*.xml